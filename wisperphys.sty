% TODO: check the physics package. On first impression, there are many commands
% I don't like in the very form they're defined in this package, but it might
% be a good idea to reimplement sane version of them here.

\RequirePackage{xparse}
\ProvidesExplPackage {wisperphys} {2019-10-01} {0.1} {Empty description.}

\cs_new:Npn \__wisper_keys_define_phys:n #1 { \keys_define:nn { wisper/phys } {#1} }
\cs_new:Npn \__wisper_keys_define_phys:nn #1#2 { \keys_define:nn { wisper / phys / #1 } {#2} }
\cs_new:Npn \__wisper_keys_set_phys:n #1 { \keys_set:nn { wisper/phys } {#1} }
\cs_new_eq:NN \PhysStyle \__wisper_keys_set_phys:n

% Don't rewrite things that already exist [[[1
% Use \verb|siunitx| to properly format numerical quantities.
\RequirePackage{siunitx}
\sisetup{%
  %locale=DE,
  separate-uncertainty = true,
  exponent-product = \cdot,
  range-units = brackets,
}

% Typeset istope symbols
\RequirePackage{isotope}
% silence compatibility warning by specifying a version.
\RequirePackage[version=4]{mhchem}
\cs_new:Npn \isomerslash  { \textnormal{ / } \allowbreak }
\ProvideDocumentCommand \isomer { m } { \cesplit{{\/}{\c{isomerslash}}}{#1} }

\RequirePackage{tikz}
\ExplSyntaxOff
\usetikzlibrary{arrows.meta}
\usetikzlibrary{calc}
\usetikzlibrary{math}
\ExplSyntaxOn

% Dirac notation
% This re-implements much of braket.sty because the latter has certain issues:
% - no support for mathtools-style size modifiers \braket[\big]{...}
% - interferes with my definition of \Set in common_math.tex
% - latex2e, therefore unreadable without fixing whitespace first

\cs_new:Npn \__wisper_size_left:nn #1#2
  {
    \IfBooleanTF {#1}
      { \left }
      {
        \__wisper_tl_if_novalue_or_blank:nF {#2} { \use:c { \cs_to_str:N #2 l } }
      }
  }
\cs_new:Npn \__wisper_size_mid:nn #1#2
  {
    \IfBooleanTF {#1}
      { \middle }
      {
        \__wisper_tl_if_novalue_or_blank:nF {#2} { #2 }
      }
  }
\cs_new:Npn \__wisper_size_right:nn #1#2
  {
    \IfBooleanTF {#1}
      { \right }
      {
        \__wisper_tl_if_novalue_or_blank:nF {#2} { \use:c { \cs_to_str:N #2 r } }
      }
  }
\DeclareDocumentCommand \ket {s o m}
  {
    \mathinner
      {
        \__wisper_size_mid:nn {#1} {#2} \vert
        #3
        \__wisper_size_right:nn {#1} {#2} \rangle
      }
  }
\DeclareDocumentCommand \bra {s o m}
  {
    \mathinner
      {
        \__wisper_size_mid:nn {#1} {#2} \langle
        #3
        \__wisper_size_right:nn {#1} {#2} \vert
      }
  }
\DeclareDocumentCommand \braket {s o m}
  {
    \group_begin:
      \char_set_mathcode:nn { `\| } { 32768 }  % active
      \cs_set:Npn \__wisper_mid_vert:
        {
          \, \__wisper_size_mid:nn {#1} {#2} \vert \,
        }
      \char_set_active_eq:NN | \__wisper_mid_vert: 
      \mathinner
        {
          \__wisper_size_left:nn {#1} {#2} \langle
          #3
          \__wisper_size_right:nn {#1} {#2} \rangle
        }
    \group_end:
  }
\DeclareDocumentCommand \ketbra {s o m m}
  {
    \mathinner
      {
        \__wisper_size_left:nn {#1} {#2} \vert
        #3
        \__wisper_size_mid:nn {#1} {#2} \rangle
        %\!
        \__wisper_size_mid:nn {#1} {#2} \langle
        #4
        \__wisper_size_right:nn {#1} {#2} \vert
      }
  }

% cf. https://tex.stackexchange.com/questions/214347/how-to-implement-a-macro-for-normal-ordering-of-operators
\NewDocumentCommand \NormalOrdering { m }
  {
    \mathopen{\vcentcolon} \, \mathinner{#1} \, \mathclose{\vcentcolon}
  }

% Electrodynamics [[[1
  \NewDocumentCommand \epz { } { \epsilon_0 }
\NewDocumentCommand \muz { } { \mu_0 }
\NewDocumentCommand \epr { } { \epsilon_r }
\NewDocumentCommand \mur { } { \mu_r }

% Lagrange and Hamilton formalism [[[1
\NewDocumentCommand \lagr { } { \mathcal{L} }
\NewDocumentCommand \hmlt { } { \mathcal{H} }


% general quantum theory [[[1
\DeclarePairedDelimiterX \Comm[2] \lbrack \rbrack
  { \__wisper_argument_or_empty:n {#1}, \__wisper_argument_or_empty:n {#2} }
\DeclareDocumentCommand \CommX { s o m m }
% plays better with align and similar environments due the lack of additional
% grouping compared to the mathtools version
  {
    \IfBooleanTF {#1}
      {
        \mathopen{}\mathclose\left[ #3, #4 \right]
      }
      {
        \IfNoValueTF {#2}
          {
            \mathopen\lbrack #3, #4 \mathclose\rbrack
          }
          {
            \mathopen{#2\lbrack} #3, #4 \mathclose{#2\rbrack}
          }
      }
  }
\DeclarePairedDelimiterX \AntiComm[2] \lbrace \rbrace
  { \__wisper_argument_or_empty:n {#1}, \__wisper_argument_or_empty:n {#2} }

\NewDocumentCommand \paulimx { } { \begin{pmatrix}0 & 1 \\ 1 & 0\end{pmatrix} }
\NewDocumentCommand \paulimy { } { \begin{pmatrix}-i & 0 \\ 0 & i\end{pmatrix} }
\NewDocumentCommand \paulimz { } { \begin{pmatrix}1 & 0 \\ 0 & -1\end{pmatrix} }


% Feynman diagrams [[[1
\tl_gset:Nn \g__wisper_doublesided_diagram_arrow_angle_tl {30}
\seq_new:N \__wisper_doublesided_operators_seq
\seq_new:N \__wisper_doublesided_arrows_seq

\keys_define:nn { wisper / physics / diagrams / options}
  {
    left .bool_set:N = \l__wisper_doublesided_diagram_left_bool,
    left .default:n = true,
    right .bool_set_inverse:N = \l__wisper_doublesided_diagram_left_bool,
    right .default:n = true,
    left .initial:n = true,
    in .bool_set:N = \l__wisper_doublesided_diagram_in_bool,
    in .default:n = true,
    out .bool_set_inverse:N = \l__wisper_doublesided_diagram_in_bool,
    out .default:n = true,
    in .initial:n = true,
  }

\cs_new:Npn \__wisper_tikz_symmetrize_bbox:nn #1#2
  {
    % Show old bounding box
    %\draw[dashed, red]
    %  (current ~ bounding ~ box . south ~ west)
    %  rectangle
    %  (current ~ bounding ~ box . north ~ east);

    % TODO: respect the second argument and only symmetrize in the given
    % direction(s). These integers can probably be used by pgfmath's
    % ifthenelse
    \str_if_in:nnTF {#2} {x}
      { \tl_set:Nn \l_tmpa_tl { 1 } }
      { \tl_set:Nn \l_tmpa_tl { 0 } }
    \str_if_in:nnTF {#2} {y}
      { \tl_set:Nn \l_tmpb_tl { 1 } }
      { \tl_set:Nn \l_tmpb_tl { 0 } }

    \path[use ~ as ~ bounding ~ box
        %, draw  % show new bounding box
      ]
      let
        \p{center} = (#1),
        \p{bbox ~ sw} = (current ~ bounding ~ box . south ~ west),
        \p{bbox ~ ne} = (current ~ bounding ~ box . north ~ east),
        \n{ww} = { \x{center} - \x{bbox ~ sw} },
        \n{we} = { \x{bbox ~ ne} - \x{center} },
        \n{dp} = { \y{center} - \y{bbox ~ sw} },
        \n{ht} = { \y{bbox ~ ne} - \y{center} },
        \n{ww} = { max( \n{ww}, \n{we} ) },
        \n{we} = { \n{ww} },
        \n{ht} = { max( \n{ht}, \n{dp} ) },
        \n{dp} = { \n{ht} }
      in
        ($(#1) - (\n{ww}, \n{dp})$)
        rectangle
        ($(#1) + (\n{we}, \n{ht})$);
  }
\cs_new:Npn \__wisper_doublesided_diagram_tikz:nnn #1#2#3
  {
    \begin{tikzpicture}
      \node (m) [matrix,inner~xsep=0.07em, inner~ysep=0.3ex]{
        #1
      };
      % side bars
      \draw [very~thick, {Round~Cap[]}-{Round~Cap[]}]
        (m.south~west) -- (m.north~west);
      \draw [very~thick, {Round~Cap[]}-{Round~Cap[]}]
        (m.south~east) -- (m.north~east);

      % dashed lines for pulses
      #2

      % Arrows
      \int_set:Nn \l_tmpa_int {1}
      \cs_set_eq:NN \Photon \__wisper_arrowfunc:nn
      #3

      % Adjust bounding box to be symmetric around the matrix' center
      \__wisper_tikz_symmetrize_bbox:nn {m.center} {x}
    \end{tikzpicture}
  }
\cs_generate_variant:Nn \__wisper_doublesided_diagram_tikz:nnn {xxx, xnn}

\cs_new:Npn \__wisper_nodefunc:nn #1#2
  { \exp_not:N \node (op~#1) {#2}; \exp_not:N \\ }

\cs_new:Npn \__wisper_linefunc:nn #1#2
  {
    \exp_not:N \coordinate (a~#1~#2) at ($(op~#1 .center) ! .5 ! (op~#2 .center)$);
    \exp_not:N \coordinate (m~#1~west) at (a~#1~#2 -| {m.west});
    \exp_not:N \coordinate (m~#1~east) at (a~#1~#2 -| {m.east});
    \exp_not:N \draw [densely~dashed] (m~#1~west) -- (m~#1~east);
  }

\cs_new:Npn \__wisper_arrowfunc:nn #1#2
  {
    \keys_set:nn  { wisper / physics / diagrams / options } {#1}
    \bool_if:NTF \l__wisper_doublesided_diagram_left_bool
      {
        \bool_if:NTF \l__wisper_doublesided_diagram_in_bool
          {
            \draw [ thick, {Stealth[length=1.4ex, width'=0pt~0.6]}- ]
              (m ~ \int_eval:n { \l_tmpa_int } ~ west)
              -- +(\int_eval:n { -180 + \g__wisper_doublesided_diagram_arrow_angle_tl } \c_colon_str 3.5ex)
              node[left, inner~sep=.2ex]
              { \footnotesize \tl_trim_spaces:n{#2} };
          }
          {
            \draw [ thick, -{Stealth[length=1.4ex, width'=0pt~0.6]} ]
              (m ~ \int_eval:n { \l_tmpa_int } ~ west)
              -- +(\int_eval:n { -180 - \g__wisper_doublesided_diagram_arrow_angle_tl } \c_colon_str 3.5ex)
              node[left, inner~sep=.2ex]
              { \footnotesize \tl_trim_spaces:n{#2} };
          }
      }
      {
        \bool_if:NTF \l__wisper_doublesided_diagram_in_bool
          {
            \draw [ thick, {Stealth[length=1.4ex, width'=0pt~0.6]}- ]
              (m ~ \int_eval:n { \l_tmpa_int } ~ east)
              -- +(\int_eval:n { -\g__wisper_doublesided_diagram_arrow_angle_tl } \c_colon_str 3.5ex)
              node[right, inner~sep=.2ex]
              { \footnotesize \tl_trim_spaces:n{#2} };
          }
          {
            \draw [ thick, -{Stealth[length=1.4ex, width'=0pt~0.6]} ]
              (m ~ \int_eval:n { \l_tmpa_int } ~ east)
              -- +(\int_eval:n { \g__wisper_doublesided_diagram_arrow_angle_tl } \c_colon_str 3.5ex)
              node[right, inner~sep=.2ex]
              { \footnotesize \tl_trim_spaces:n{#2} };
          }
      }
  }

\cs_generate_variant:Nn \__wisper_linefunc:nn {nf}
\cs_generate_variant:Nn \int_step_function:nN {fN}
\cs_new:Npn \__wisper_linefunc:n #1
  { \__wisper_linefunc:nf {#1}{ \int_eval:n { #1 + 1 } } }

\cs_new:Npn \__wisper_doublesided_diagram:NN #1#2
  {
    \__wisper_doublesided_diagram_tikz:xnn
      {
        \seq_indexed_map_function:NN \__wisper_doublesided_operators_seq
          \__wisper_nodefunc:nn
      }
      {
        \int_step_function:fN
          { \int_eval:n { \seq_count:N \__wisper_doublesided_operators_seq  - 1} }
          \__wisper_linefunc:n
      }
      {
        \seq_use:Nn \__wisper_doublesided_arrows_seq { \int_incr:N \l_tmpa_int }
      }
  }

\NewDocumentCommand \DoubleSidedDiagram { m }
  {
    \bool_set_true:N \l_tmpa_bool
    \clist_map_inline:nn {#1}
      {
        \bool_if:NTF \l_tmpa_bool
          {
            \seq_put_right:Nn \__wisper_doublesided_operators_seq {##1}
            \bool_set_false:N \l_tmpa_bool
          }
          {
            \seq_put_right:Nn \__wisper_doublesided_arrows_seq {##1}
            \bool_set_true:N \l_tmpa_bool
          }
      }

    \seq_reverse:N \__wisper_doublesided_operators_seq
    \seq_reverse:N \__wisper_doublesided_arrows_seq

    \__wisper_doublesided_diagram:NN 
      \__wisper_doublesided_operators_seq
      \__wisper_doublesided_arrows_seq
  }

\tl_new:N \__wisper_spectroscropic_notation_font_tl
\__wisper_keys_define_phys:nn { spectroscopic-notation }
  {
    font .tl_gset:N = \__wisper_spectroscropic_notation_font_tl,
    font .initial:n = { \mathrm },
  }
\NewDocumentCommand \SpecLevel { o m m m }
  {
    \ensuremath{
      %\IfValueT {#1}
      %  { #1 }
      %\tensor*%
      %  %[
      %  %  ^{
      %  %    \__wisper_spectroscropic_notation_font_tl
      %  %      {#2}
      %  %  }
      %  %]%
      %  { #3 }%
      %  {%
      %    \c_math_superscript_token {x}%
      %    \c_math_subscript_token%
      %      { \__wisper_spectroscropic_notation_font_tl {#4} }%
      %  }
      {
        \IfValueT {#1}
          { #1 }
      }
      \c_math_superscript_token {#2}
      { \__wisper_spectroscropic_notation_font_tl {#3} }
      \c_math_subscript_token {#4}
    }
  }

% vim: ft=tex ts=2 sw=2 et fdm=marker fmr=[[[,]]]:
